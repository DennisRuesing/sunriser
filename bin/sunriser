#!/usr/bin/env perl
# PODNAME: sunriser_cdb
# ABSTRACT: Debugging tool for msgpack cdbs of SunRiser

$|=1;

use strict;
use warnings;

use FindBin;
use lib $FindBin::Dir . "/../lib";

use DDP;
use Path::Tiny;
use SunRiser;
use bytes;
use Carp qw( croak );

my $host = shift @ARGV;
croak "Requires target Host/IP" unless $host;
my $command = shift @ARGV;
croak "Require command" unless $command;
my @args = @ARGV;

my $sr = SunRiser->new( host => $host );

if (lc($command) eq 'firmware') {
  if (scalar @args == 0) {
    my $res = $sr->call('GET','firmware.mp');
    p($sr->res_mp_body($res));
  } elsif (scalar @args == 1) {
    print "Installing firmware ".$args[0].".... ";
    my $firmware = scalar path($args[0])->slurp_raw;
    if ($sr->call('PUT','firmware',$firmware)->is_success) {
      print "success!\n";
      print "Waiting for restart of SunRiser...";
      sleep(40);
      while (1) {
        my $res = $sr->call('GET','ok');
        print ".";
        if ($res->is_success) {
          print "\n";
          last;
        }
      }
    } else {
      print "FAILURE!!!!\n";
      exit 1;
    }
  } else {
    croak "Too many args";
  }
} elsif ($command eq 'ok') {
  if (scalar @args == 0) {
    if ($sr->call('GET','ok')->is_success) {
      print "OK\n";
    } else {
      print "ERROR NOT OK\n";
      exit 1;
    }
  } else {
    croak "Too many args";
  }
} elsif ($command eq 'factory') {
  if (scalar @args == 1) {
    print "Installing factory ".$args[0].".... ";
    my $factory = scalar path($args[0])->slurp_raw;
    if ($sr->call('PUT','factory',$factory)->is_success) {
      print "success!\n";
    } else {
      print "FAILURE!!!!\n";
      exit 1;
    }
  } else {
    croak "Too few or too many args";
  }
} elsif ($command eq 'state') {
  if (scalar @args == 0) {
    p($sr->res_mp_body($sr->call_mp('GET','state')));
  } else {
    croak "Too many args";
  }
} elsif ($command eq 'bootload') {
  if (scalar @args == 0) {
    p($sr->res_mp_body($sr->call_mp('GET','bootload.mp')));
  } else {
    croak "Too many args";
  }
} elsif ($command eq 'reboot') {
  if (scalar @args == 0) {
    if ($sr->call('GET','reboot')->is_success) {
      print "Reboot\n";
    } else {
      print "Reboot failed!\n";
      exit 1;
    }
  } else {
    croak "Too many args";
  }
}

exit 0;