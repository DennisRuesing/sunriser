: cascade base { title => "Tagesplanung", nav => "planner" }
: override content -> {

<svg id="svg-edit-demo" viewBox="0 0 400 200" width="600" height="300" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="">
  <defs>
      <circle id="point-handle" r="3" x="0" y="0" stroke-width="1" fill="#fff" fill-opacity="0.4" stroke="#fff"/>
  </defs>
  <polygon 
    id="edit-star" 
    stroke="#89bee4" stroke-width="5" stroke-linejoin="round" fill="#d7e9f6" 
    points="0,40 100,100 173,199 295,39 316,96 400,34 450,100 450,450 -50,450 -50,100"
  />
  <use xlink:href="#point-handle" class="point-handle-start"  x="0"    y="40"  data-index="0"/>
  <use xlink:href="#point-handle" class="point-handle"        x="100"  y="100" data-index="1"/>
  <use xlink:href="#point-handle" class="point-handle"        x="173"  y="199" data-index="2"/>
  <use xlink:href="#point-handle" class="point-handle"        x="295"  y="39"  data-index="3"/>
  <use xlink:href="#point-handle" class="point-handle"        x="316"  y="96"  data-index="4"/>
  <use xlink:href="#point-handle" class="point-handle-end"    x="400"  y="34"  data-index="5"/>
  <path
    style="opacity:0.50;fill:none;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 0.68106113,-2.6684075 0.23610949,199.76389 l 399.52778051,0"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 50,400 50,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 100,400 100,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 150,400 150,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 200,400 200,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 250,400 250,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 300,400 300,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 350,400 350,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 400,400 400,-400"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 400,50 -400,50"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 400,100 -400,100"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 400,150 -400,150"
  />
  <path
    style="opacity:0.50;fill:none;stroke:#aaaaaa;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
    d="M 400,200 -400,200"
  />
</svg>

<script type="text/javascript">

$(function(){

  document.addEventListener('DOMContentLoaded', function () {
    'use strict';

    var sns="http://www.w3.org/2000/svg",
        xns="http://www.w3.org/1999/xlink",
        root = document.getElementById('svg-edit-demo'),
        star = document.getElementById('edit-star'),
        rootMatrix,
        originalPoints = [],
        transformedPoints = [];

    for (var i = 0, len = star.points.numberOfItems; i < len; i++) {
        var handle = document.createElementNS(sns, 'use'),
            point = star.points.getItem(i),
            newPoint = root.createSVGPoint();

        handle.setAttributeNS(xns, 'href', '#point-handle');

        if(i == 0){
          handle.setAttribute('class', 'point-handle-start');
        }
        else if (i == len - 5){
          handle.setAttribute('class', 'point-handle-end');
        }
        else{
          handle.setAttribute('class', 'point-handle');
        }

        handle.x.baseVal.value = newPoint.x = point.x;
        handle.y.baseVal.value = newPoint.y = point.y;

        handle.setAttribute('data-index', i);

        originalPoints.push(newPoint);

        root.appendChild(handle);
    }
    function applyTransforms (event) {
        rootMatrix = root.getScreenCTM();

        transformedPoints = originalPoints.map(function(point) {
            return point.matrixTransform(rootMatrix);
        });

        interact('.point-handle').snap({
            anchors: transformedPoints,
            range: 20 * Math.max(rootMatrix.a, rootMatrix.d)
        });
    }

    interact(root)
        .on('mousedown', applyTransforms)
        .on('touchstart', applyTransforms);

    interact('.point-handle')
        .draggable({
            onstart: function (event) {
                root.setAttribute('class', 'dragging');
            },
            onmove: function (event) {
                var i = event.target.getAttribute('data-index')|0,
                    point = star.points.getItem(i);

                point.x += event.dx / rootMatrix.a;
                point.y += event.dy / rootMatrix.d;

                event.target.x.baseVal.value = point.x;
                event.target.y.baseVal.value = point.y;
            },
            onend: function (event) {
                root.setAttribute('class', '');
            },
        })
        .snap({
            mode: 'anchor',
            anchors: originalPoints,
            range: 10,
            elementOrigin: { x: 0.5, y: 0.5 }
        })
        .restrict({ drag: document.rootElement })
        .styleCursor(false);

    interact('.point-handle-start')
        .draggable({
            onstart: function (event) {
                root.setAttribute('class', 'dragging');
            },
            onmove: function (event) {
                var i = event.target.getAttribute('data-index')|0,
                    point = star.points.getItem(i);

                point.x += 0;
                point.y += event.dy / rootMatrix.d;

                event.target.x.baseVal.value = 0;
                event.target.y.baseVal.value = point.y;
            },
            onend: function (event) {
                root.setAttribute('class', '');
            },
        })
        .snap({
            mode: 'anchor',
            anchors: originalPoints,
            range: 10,
            elementOrigin: { x: 0.5, y: 0.5 }
        })
        .restrict({ drag: document.rootElement })
        .styleCursor(false);

    interact('.point-handle-end')
        .draggable({
            onstart: function (event) {
                root.setAttribute('class', 'dragging');
            },
            onmove: function (event) {
                var i = event.target.getAttribute('data-index')|0,
                    point = star.points.getItem(i);

                point.x = 400;
                point.y += event.dy / rootMatrix.d;

                event.target.x.baseVal.value = 400;
                event.target.y.baseVal.value = point.y;
            },
            onend: function (event) {
                root.setAttribute('class', '');
            },
        })
        .snap({
            mode: 'anchor',
            anchors: originalPoints,
            range: 10,
            elementOrigin: { x: 0.5, y: 0.5 }
        })
        .restrict({ drag: document.rootElement })
        .styleCursor(false);

    //TODO : For points handle at begining and at end. Only allow y 
    //       draggaility!

    document.addEventListener('dragstart', function (event) {
        event.preventDefault();
    });
  });

});

</script>

: }