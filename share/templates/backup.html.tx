: cascade base { title => "Sicherung", nav => "system", no_form => 1, no_bighelp => 1, help => mark_raw("Hier stehen die Funktionen zur Sicherung und Wiederherstellung Ihrer Konfiguration vom SunRiser zur Verf&uuml;gung. 'Konfiguration runterladen' &ouml;ffnet Ihren Dateimanager um den Zielort f&uuml;r die Sicherungsdatei auszuw&uuml;hlen. Der vorgegebene Dateiname hat automatisch einen aktuellen Zeitstempel.<br><br> &Uuml;ber 'Konfiguration wieder herstellen' k&ouml;nnen Sie dann diese Datei jederzeit wieder auf den SunRiser einspielen. Die Sicherungsdatei kann von dem Dateimanager Ihres Systems einfach dort hinein gezogen werden, oder Sie klicken einfach auf das Feld um es im Dateimanager auszuw&auml;hlen.<br><br> Falls Sie gerade ein 'Factory-Reset' durchgef&uuml;hrt haben, k&ouml;nnen Sie &uuml;ber 'Factory-Reset Sicherung runterladen' die alte Konfiguration als Sicherungsdatei herunterladen. Diese k&ouml;nnen Sie dann, wie eine gew&ouml;hnliche Sicherungsdatei, wieder in den SunRiser einspielen. ") }
: override content -> {

<div class="buttonbloc backupbuttons">
  <a class="bigbutton backupbutton" href="/backup">
    <div>Konfiguration runterladen</div>
  </a>
  <div id="backup_restore" class="bigbutton backupbutton">
    <div>Konfiguration wieder herstellen (Einfach .mp Datei hier hineinziehen oder anklicken f&uuml;r Dateimanager)</div>
  </div>
  <a class="bigbutton backupbutton" href="/factorybackup">
    <div>Factory-Reset Sicherung runterladen</div>
  </a>
</div>
<div class="backup_info">
</div>

<input type="file" class="hiddenfileupload" id="backup_fileupload" />

: }
: override postjs -> {

<script type="text/javascript">

var backup_reader = new FileReader();
backup_reader.onload = function(e){
  var bytesarray = new Uint8Array(backup_reader.result);
  result = msgpack.unpack(bytesarray);
  var ok = 1;
  if (typeof result === 'object') {
    $.each(result,function(k,v){
      var type = sr_type(k);
      if (typeof type === 'undefined') {
        ok = 0;
      }
    });
  } else {
    ok = 0;
  }
  if (ok) {
    sr_screenblock('Sende Sicherungsdatei an SunRiser');
    var call_options = {
      type: 'PUT',
      url: '/restore',
      data: bytesarray,
      contentType: 'application/octet-stream',
      dataType: 'arraybuffer',
      processData: false,
      cache: false,
      error: function(xhr,error,errorthrown){
        // TODO error handling
      },
      success: function(data,status,xhr){
        sr_screenblock('<div>Warte auf Neustart</div><div>Bitte das Ger&auml;t NICHT abschalten!!!</div>');
        // TODO real check for back up
      },
    };
    $.ajax(call_options);    
  } else {
    alert("Ung" + unescape("%FC") + "ltige Sicherungsdatei!");
  }
};

function use_backup_file(file) {
  backup_reader.readAsArrayBuffer(file);
}

function too_many_files() {
  alert('Bitte nur eine Datei hochladen!');
}

// Setup the dnd listeners.
$('#backup_restore').on('dragover',function(e){
  e.stopPropagation();
  e.preventDefault();
  e.originalEvent.dataTransfer.dropEffect = 'copy';
}).on('drop',function(e){
  e.stopPropagation();
  e.preventDefault();
  var files = e.originalEvent.dataTransfer.files; // FileList object.
  if (files.length == 1) {
    use_backup_file(files[0]);
  } else if (files.length == 0) {
    // do nothing
  } else {
    too_many_files();
  }
}).click(function(){
  $('#backup_fileupload').trigger('click');
});

$('#backup_fileupload').change(function(){
  if (this.files.length == 1) {
    use_backup_file(this.files[0]);
  } else if (this.files.length == 0) {
    // do nothing
  } else {
    too_many_files();
  }
});

</script>

: }
